from main import Question, db, Answer


def fill_database():
    answers = [[(1, "Я люблю планировать свой день"),
               (2, "Я люблю действовать спонтанно")],
               [(1, "Мне лучше, когда работать надо быстро, не замедляясь и не отступая."),
               (2, "Мне лучше даётся медленная и вдумчивая работа.")],
               [(1, "В целом я обладаю равномерной работоспособностью."),
               (2, "Живу периодическими подъёмами и спадами энергии.")],
               [(1, "При необходимости я легко справлюсь с повседневным бытом."),
               (2, "Повседневная текучка меня так угнетает, что я часто запускаю быт.",)],
               [(1, "Я всегда спрашиваю себя, почему мне нравится или не нравится этот человек."),
               (2, "Вопрос, как он (она) ко мне относится, я задаю себе только при необходимости.")],
               [(3, "Без труда вступаю в разговор и высказываю своё мнение."),
               (4, "Ожидаю удобного момента, чтобы высказаться.")],
               [(3, "Если работа не пошла, недолго думая переключусь на другую деятельность."),
               (4, "Несделанная работа долго не идёт у меня из головы.")],
               [(3, "Мне проще реализовывать или внедрить, чем придумать что-то с нуля."),
               (4, "Мне проще придумать что-то, чем воплощать его в повседневную реальность.")],
               [(3, "Главную информацию о человеке я получаю от выражения его лица или интонаций."),
               (4, "В оценке людей я доверяю лишь документам и независимым характеристикам.")],
               [(2, "Мне бывает легче понять других, чем свой собственный характер."),
               (4, "Мне более понятны собственные поступки, чем мотивы других людей.")],
               [(5, "Если надо, могу долго заниматься одним и тем же, пока не завершу его."),
               (6, "Не могу себя заставить заниматься одним и тем же делом долго.")],
               [(5, "Хорошо воспринимаю лишь конкретную и наглядно представимую информацию."),
               (6, "Хорошо воспринимаю абстрактную информацию, которая требует воображения.")],
               [(5, "Нередко моё первое впечатление о человеке впоследствии подтверждается."),
               (6, "Не стану судить о человеке по своим первым субъективным впечатлениям.")],
               [(5, "Принимаюсь за новые и новые дела, как только разобрался со старыми."),
               (6, "Всё время сдерживаю круг своих забот, чтобы со всем справиться.")],
               [(5, "В основном действую так, как предварительно настроился."),
               (6, "Действую часто спонтанно, как сложится ситуация.")],
               [(7, "Мои предложения отличаются конкретностью и опытом решения подобных задач."),
               (8, "Мои предложения отличаются необычностью и учётом отдалённых последствий.")],
               [(7, "Я сразу чувствую, если кому-то не нравлюсь, даже если он это скрывает."),
               (8, "Я долго сомневаюсь, прежде чем удостоверюсь, что ко мне относятся с антипатией.")],
               [(7, "Нередко сожалею, что проявил излишнюю активность."),
               (8, "Нередко отмечаю, что мне надо было быть более активным."),
               (7, "Чтобы выполнить скучную, но необходимую работу, мне приходится заставлять себя."),
               (8, "Чтобы выполнить скучную работу, мне надо периодически переключаться или отвлекаться.")],
               [(7, "Мне нравится помечтать или представить ситуацию с другой, неожиданной стороны."),
               (8, "Размышляя о ситуации, я стараюсь представить её наглядно и во всех подробностях."),
               (7, "От меня очень трудно скрыть обиду или недовольство."),
               (8, "Обиду или недовольство я замечаю, когда её проявляют открыто.")],
               [(7, "Я - человек в целом открытый."),
               (8, "Я - человек в целом сдержанный.")]
               ]

    for question_ind, question_answers in enumerate(answers, start=1):
        for answer_ind, (answer_type, answer_text) in enumerate(question_answers, start=1):
            answer = Answer(answer_ind, answer_type, answer_text, question_ind)
            db.session.add(answer)
        question = Question(len(question_answers), question_ind)
        db.session.add(question)


def main():
    db.create_all()
    fill_database()
    db.session.commit()


if __name__ == '__main__':
    main()